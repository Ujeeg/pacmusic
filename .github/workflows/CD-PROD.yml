name: Deploy to Production ðŸš€ðŸš€ðŸš€

on:
  release:
    types:
      - published
      - edited

jobs:
  deploy-production:
    name: Deploy to production server ðŸš€ðŸš€ðŸš€
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Execute deployment command
        uses: appleboy/ssh-action@v1.0.3
        env:
          APP_PROD_PATH: ${{ vars.APP_PROD_PATH }}
          GIT_URL: ${{ secrets.GIT_URL }}
          APP_PROD_PORT_1: ${{ secrets.APP_PROD_PORT_1 }}
          APP_PROD_PORT_2: ${{ secrets.APP_PROD_PORT_2 }}
          MINIO_PROD_ENDPOINT: ${{ secrets.MINIO_PROD_ENDPOINT }}
          MINIO_PROD_ACCESS_KEY: ${{ secrets.MINIO_PROD_ACCESS_KEY }}
          MINIO_PROD_SECRET_KEY: ${{ secrets.MINIO_PROD_SECRET_KEY }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          APP_NAME: ${{ vars.APP_NAME }}
          APP_TAG: ${{ github.event.release.tag_name }}

        with:
          host: ${{ secrets.SSH_HOST_PRODUCTION }}
          username: ${{ secrets.SSH_USER_NAME_PRODUCTION }}
          key: ${{ secrets.SSH_PRIVATE_KEY_PRODUCTION }}
          envs: APP_PROD_PATH, APP_PROD_PORT_1, APP_PROD_PORT_2, GIT_URL, MINIO_PROD_ENDPOINT, MINIO_PROD_ACCESS_KEY, MINIO_PROD_SECRET_KEY, DOCKERHUB_USERNAME, DOCKERHUB_TOKEN, APP_NAME, APP_TAG
          script: |
          

            sudo docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN 


            if [[ -d "/home/ubuntu/${APP_PROD_PATH}/pacmusic-prod-1" ]]; then 
              cd /home/ubuntu/$APP_PROD_PATH/pacmusic-prod-1
              sudo docker compose down
              git pull --rebase
            else
              ssh-keyscan github.com > ~/.ssh/known_hosts
              git clone $GIT_URL /home/ubuntu/$APP_PROD_PATH/pacmusic-prod-1
              cd /home/ubuntu/$APP_PROD_PATH/pacmusic-prod-1
            fi

            echo "APP_PROD_PORT_1=${{ secrets.APP_PROD_PORT_1 }}" >> .env
            echo "MINIO_PROD_ENDPOINT=${{ secrets.MINIO_PROD_ENDPOINT }}" >> .env
            echo "MINIO_PROD_ACCESS_KEY=${{ secrets.MINIO_PROD_ACCESS_KEY }}" >> .env
            echo "MINIO_PROD_SECRET_KEY=${{ secrets.MINIO_PROD_SECRET_KEY }}" >> .env
            echo "APP_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.APP_NAME }}" >> .env
            echo "APP_TAG=${{ github.event.release.tag_name }}" >> .env
            


            if [[ -d "/home/ubuntu/${APP_PROD_PATH}/pacmusic-prod-2" ]]; then 
              cd /home/ubuntu/$APP_PROD_PATH/pacmusic-prod-2
              sudo docker compose down
              git pull --rebase
            else
              ssh-keyscan github.com > ~/.ssh/known_hosts
              git clone $GIT_URL /home/ubuntu/$APP_PROD_PATH/pacmusic-prod-2
              cd /home/ubuntu/$APP_PROD_PATH/pacmusic-prod-2
            fi


            echo "APP_PROD_PORT_2=${{ secrets.APP_PROD_PORT_2 }}" >> .env
            echo "MINIO_PROD_ENDPOINT=${{ secrets.MINIO_PROD_ENDPOINT }}" >> .env
            echo "MINIO_PROD_ACCESS_KEY=${{ secrets.MINIO_PROD_ACCESS_KEY }}" >> .env
            echo "MINIO_PROD_SECRET_KEY=${{ secrets.MINIO_PROD_SECRET_KEY }}" >> .env
            echo "APP_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.APP_NAME }}" >> .env
            echo "APP_TAG=${{ github.event.release.tag_name }}" >> .env
            
            
            sudo docker compose up --build --detach pacmusic-prod-2 pacmusic-prod-1

      - name: Hit Endpoint 1
        run: |
          sleep 10
          curl ${{ secrets.PROD_URL_1 }}

      - name: Hit Endpoint 2
        run: |
          sleep 10
          curl ${{ secrets.PROD_URL_2 }}
