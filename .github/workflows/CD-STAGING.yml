name: Deploy Staging ðŸš€

on:
  push:
    branches: [ "main" ]

jobs:
  deploy-staging:
    name: Deploy to staging server
    runs-on: ubuntu-latest

    steps:
      - name: Execute deployment command
        uses: appleboy/ssh-action@v1.2.0
        env:
          APP_STG_PATH: ${{ vars.APP_STG_PATH }}
          GIT_URL: ${{ vars.GIT_URL }}
          APP_STG_PORT: ${{ secrets.APP_STG_PORT }}
          MINIO_STG_ENDPOINT: ${{ secrets.MINIO_STG_ENDPOINT }}
          MINIO_STG_ACCESS_KEY: ${{ secrets.MINIO_STG_ACCESS_KEY }}
          MINIO_STG_SECRET_KEY: ${{ secrets.MINIO_STG_SECRET_KEY }}

        with:
          host: ${{ secrets.SSH_HOST_STAGING }}
          username: ${{ secrets.SSH_USER_NAME_STAGING }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}
          envs: APP_STG_PORT, APP_STG_PATH, MINIO_STG_ENDPOINT, MINIO_STG_ACCESS_KEY, MINIO_STG_SECRET_KEY, GIT_URL
          script: |

            if [[ -d "/home/ubuntu/${APP_STG_PATH}" ]]; then 
              cd /home/ubuntu/$APP_STG_PATH
              sudo docker compose down 
              git pull origin main
            else
              ssh-keyscan github.com > ~/.ssh/known_hosts
              git clone $GIT_URL /home/ubuntu/$APP_STG_PATH
              cd /home/ubuntu/$APP_STG_PATH
            fi

            # If there are any envars update
            echo "POSTGRES_USER=$POSTGRES_USER" > .env
            echo "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" >> .env
            echo "POSTGRES_DB=$POSTGRES_DB" >> .env
            echo "POSTGRES_HOST=$POSTGRES_HOST" >> .env
            echo "POSTGRES_PORT=$POSTGRES_PORT" >> .env

            # Run app
            sudo docker compose up app-staging --build --detach
      
      - name: Hit Endpoint
        run: |
          sleep 20
          curl ${{ vars.STAGING_URL }}